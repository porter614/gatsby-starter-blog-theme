{"version":3,"sources":["components/ContestantKeyValue.jsx","components/ContestantToggle.jsx","components/ContestantsTable.jsx","components/NavBar.jsx","components/LoginForm.jsx","components/RegisterForm.jsx","components/UserStatus.jsx","components/ContestantProfile.jsx","components/ContestantGraph.jsx","components/SeasonsTable.jsx","App.jsx","index.js"],"names":["useStyles","makeStyles","theme","extraStatKey","display","fontWeight","extraStatValue","padding","ExtraContestantStatistic","props","classes","Grid","item","xs","size","Typography","className","stat","value","root","flexGrow","paper","spacing","background","image","width","height","img","margin","maxWidth","maxHeight","nth","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","ContestantToggle","Box","m","container","align","Card","elevation","variant","style","fontFamily","appearance","place","ButtonBase","alt","src","season","objectFit","direction","gutterBottom","daysPlayed","challengeAppearances","immunityChallengeAppearances","immunityChallengeWins","rewardChallengeAppearances","rewardChallengeWins","individualRewardChallengeWins","totalVotesCast","to","contestant_id","cursor","tableIcons","DetailPanel","forwardRef","ref","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","formControl","selectEmpty","marginTop","headCells","field","title","render","rowData","profile_image_link","border","box-shadow","transition","vertical-align","borderColor","borderRadius","grouping","numeric","disablePadding","customFilterAndSearch","term","contestant","toLowerCase","includes","birthday","ageDifMs","Date","now","parse","ageDate","Math","abs","getUTCFullYear","calculateAge","birthdate","hometown","occupations","join","customSort","a","b","length","group","challengeWins","individualImmunityChallengeWins","renderType","idols","careerSpecificCells","seasons","careerHeaders","arr","index","newItem","result","val","slice","spliceCareerHeaders","appearanceHeaders","concat","defaultSort","rank","toFixed","toString","ContestantsTable","createMuiTheme","overrides","MuiTableRow","backgroundColor","useState","state","setState","headers","rows","appearances","data","setData","handleChange","event","target","useEffect","careers","fetch","process","json","then","res","catch","err","console","log","getAppearances","color","textShadow","zoom","icons","showTitle","columns","options","filtering","sorting","doubleHorizontalScroll","columnsButton","pageSize","pageSizeOptions","toolbarButtonAlignment","thirdSortClick","searchFieldStyle","headerStyle","position","top","rowStyle","detailPanel","onRowClick","togglePanel","components","Toolbar","FormControl","InputLabel","htmlFor","Select","native","onChange","inputProps","name","id","aria-label","titleStyle","NavBar","menu","data-testid","role","onClick","toggle","document","querySelector","classList","LoginForm","isAuthenticated","initialValues","email","password","onSubmit","values","setSubmitting","resetForm","handleLoginFormSubmit","validationSchema","Yup","shape","required","touched","errors","isSubmitting","handleBlur","handleSubmit","type","placeholder","onBlur","disabled","RegisterForm","username","handleRegisterFormSubmit","min","UserStatus","this","getUserStatus","url","method","Authorization","accessToken","axios","error","Component","styles","justifyContent","alignItems","minWidth","nonCompareCells","PlayerCard","seasonPicker","justify","shrink","NativeSelect","picker","onHandleChange","fontSize","Object","keys","playerNames","map","key","FormHelperText","Paper","p","career","onHandleSeasonChange","season_order","statistic","against","ContestantsProfile","againstPicker","handleChangeContestant","bind","handleChangeAgainst","handleChangeContestantSeason","handleChangeAgainstSeason","who","get","s","getCareer","getAppearance","handleChangeSeason","match","params","QueryString","location","search","getPlayerNames","ContestantGraph","nodes","edges","graph","setGraph","events","doubleClick","node","window","href","layout","hierarchical","enabled","nodeSpacing","blockShifting","edgeMinimization","sortMethod","physics","font","borderWidth","interaction","multiselect","navigationButtons","autoResize","getNetwork","network","on","setOptions","SeasonsTable","App","users","addUser","logoutUser","getUsers","getCareers","post","access_token","localStorage","setItem","refresh_token","validRefresh","token","getItem","removeItem","preventDefault","obj","backgroundImage","backgroundRepeat","backgroundSize","exact","path","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.430dd718.chunk.js","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  extraStatKey: {\n    display: \"inline-block\",\n    fontWeight: \"bold\",\n  },\n  extraStatValue: {\n    display: \"inline-block\",\n    padding: \"10px\",\n  },\n}));\n\nconst ExtraContestantStatistic = (props) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={props.size}>\n      <div>\n        <Typography className={classes.extraStatKey}>{props.stat}:</Typography>\n        <Typography className={classes.extraStatValue}>\n          {props.value}\n        </Typography>\n      </div>\n    </Grid>\n  );\n};\n\nexport default ExtraContestantStatistic;\n","import React, { Component, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Paper, Card } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { Link } from \"react-router-dom\";\nimport ExtraContestantStatistic from \"./ContestantKeyValue\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    padding: \"10px\",\n    maxWidth: \"100%\",\n    margin: \"20px\",\n  },\n  image: {\n    width: 256,\n    height: 256,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  extraStatKey: {\n    display: \"inline-block\",\n    fontWeight: \"bold\",\n    padding: theme.spacing(1),\n  },\n  extraStatValue: {\n    display: \"inline-block\",\n    padding: \"10px\",\n    padding: theme.spacing(1),\n  },\n}));\n\nconst nth = {\n  1: \"Winner\",\n  2: \"2nd\",\n  3: \"3rd\",\n  4: \"4th\",\n  5: \"5th\",\n  6: \"6th\",\n  7: \"7th\",\n  8: \"8th\",\n  9: \"9th\",\n  10: \"10th\",\n  11: \"11th\",\n  12: \"12th\",\n  13: \"13th\",\n  14: \"14th\",\n  15: \"15th\",\n  16: \"16th\",\n  17: \"17th\",\n  18: \"18th\",\n  19: \"19th\",\n  20: \"20th\",\n};\n\nconst ContestantToggle = (props) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Box m={1}>\n        <Grid container spacing={10}>\n          <Grid item xs={3} align=\"center\">\n            <Grid item xs={12}>\n              <Card className={classes.paper} align=\"center\" elevation={10}>\n                <Typography variant=\"h6\" style={{ fontFamily: \"Survivants\" }}>\n                  {nth[props.appearance.place]}\n                </Typography>\n              </Card>\n            </Grid>\n            <Grid item xs={12}>\n              <ButtonBase>\n                <img\n                  className={classes.img}\n                  alt=\"complex\"\n                  src={`https://survivordb.s3-us-west-2.amazonaws.com/${props.appearance.season}.jpg`}\n                  style={{\n                    objectFit: \"cover\",\n                    width: \"400px\",\n                    height: \"100%\",\n                  }}\n                />\n              </ButtonBase>\n            </Grid>\n          </Grid>\n          <Grid item xs={9}>\n            <Grid container direction=\"row\">\n              <Grid item xs={12}>\n                <Typography\n                  gutterBottom\n                  variant=\"h6\"\n                  align=\"center\"\n                  style={{ fontFamily: \"Survivants\" }}\n                >\n                  Additional Metrics\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <br />\n              </Grid>\n              <Grid item xs={12}>\n                <br />\n              </Grid>\n              <ExtraContestantStatistic\n                size={6}\n                stat=\"Days on the Island\"\n                value={props.appearance.daysPlayed}\n              />\n              <ExtraContestantStatistic\n                size={6}\n                stat=\"Challenge Appearances\"\n                value={props.appearance.challengeAppearances}\n              />\n              <ExtraContestantStatistic\n                size={6}\n                stat=\"Immunity Challenge Appearances\"\n                value={props.appearance.immunityChallengeAppearances}\n              />\n              <ExtraContestantStatistic\n                size={6}\n                stat=\"Immunity Challenge Wins\"\n                value={props.appearance.immunityChallengeWins}\n              />\n              <ExtraContestantStatistic\n                size={6}\n                stat=\"Reward Challenge Appearances\"\n                value={props.appearance.rewardChallengeAppearances}\n              />\n              <ExtraContestantStatistic\n                size={6}\n                stat=\"Reward Challenge Wins\"\n                value={props.appearance.rewardChallengeWins}\n              />\n              <ExtraContestantStatistic\n                size={6}\n                stat=\"Individual Reward Challenge Wins\"\n                value={props.appearance.individualRewardChallengeWins}\n              />\n              <ExtraContestantStatistic\n                size={6}\n                stat=\"Votes Cast at Tribals with this player\"\n                value={props.appearance.totalVotesCast}\n              />\n              <Grid item xs={12}>\n                <br />\n              </Grid>\n              <Grid item xs={12}>\n                <br />\n              </Grid>\n              <Grid item xs={12} align=\"center\">\n                <ButtonBase>\n                  <Link to={`/contestant/${props.appearance.contestant_id}`}>\n                    <Typography\n                      style={{ cursor: \"pointer\", fontFamily: \"Survivants\" }}\n                    >\n                      Player Career Profile\n                    </Typography>\n                  </Link>\n                </ButtonBase>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\n// new\nContestantToggle.propTypes = {\n  appearance: PropTypes.any.isRequired,\n};\n\nexport default ContestantToggle;\n","import React, { Component, useState, useEffect } from \"react\";\nimport { forwardRef } from \"react\";\nimport axios from \"axios\";\n\nimport PropTypes from \"prop-types\";\n\nimport MaterialTable, { MTableToolbar } from \"material-table\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport { Paper, Chip } from \"@material-ui/core\";\nimport ContestantToggle from \"./ContestantToggle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nconst tableIcons = {\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\n\nfunction calculateAge(birthday) {\n  // birthday is a date\n  var ageDifMs = Date.now() - Date.parse(birthday);\n  var ageDate = new Date(ageDifMs); // miliseconds from epoch\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 325,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst renderCellData = (rowData) => rowData.idols.length;\n\nfunction customRender(value, renderType, renderFunc, field, ...args) {\n  if (renderType === \"row\") {\n    return renderFunc(value[field], ...args);\n  }\n  if (renderType === \"group\") {\n    return renderFunc(value, ...args);\n  }\n}\n\nconst headCells = [\n  {\n    field: \"profile_image_link\",\n    title: \"Avatar\",\n    render: (rowData) => (\n      <img\n        src={rowData.profile_image_link}\n        border=\"1px solid\"\n        box-shadow=\"50px 50px 113px\"\n        transition=\"all .2s ease\"\n        vertical-align=\"middle\"\n        style={{\n          width: 50,\n          borderColor: \"#74c7e3\",\n          borderRadius: \"50%\",\n        }}\n      />\n    ),\n    grouping: false,\n  },\n  {\n    field: \"contestant\",\n    numeric: false,\n    disablePadding: true,\n    title: \"Name\",\n    customFilterAndSearch: (term, rowData) =>\n      rowData.contestant.toLowerCase().includes(term.toLowerCase()),\n  },\n  {\n    field: \"birthdate\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Age\",\n    render: (rowData) => calculateAge(rowData.birthdate),\n  },\n  {\n    field: \"hometown\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Hometown\",\n    customFilterAndSearch: (term, rowData) =>\n      rowData.hometown.toLowerCase().includes(term.toLowerCase()),\n  },\n  {\n    field: \"occupation\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Occupation\",\n    render: (rowData) => rowData.occupations.join(),\n    customFilterAndSearch: (term, rowData) =>\n      rowData.occupations\n        .join()\n        .toLowerCase()\n        .includes(term.toLowerCase()),\n    customSort: (a, b) => a.occupations.length - b.occupations.length,\n    group: false,\n  },\n  {\n    field: \"challengeWins\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Challenge Wins\",\n    customFilterAndSearch: (term, rowData) => term <= rowData.challengeWins,\n  },\n  {\n    field: \"individualImmunityChallengeWins\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Individual Immunity Challenge Wins\",\n    customFilterAndSearch: (term, rowData) =>\n      term <= rowData.individualImmunityChallengeWins,\n  },\n  {\n    field: \"sitOuts\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Challenge Sit Outs\",\n  },\n  {\n    field: \"tribalCouncilAppearances\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Tribal Council Appearances\",\n  },\n  {\n    field: \"votesForBootee\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Votes for Bootee\",\n  },\n  {\n    field: \"wrongSideOfTheVote\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Wrong Side of the Vote\",\n  },\n  {\n    field: \"votesAgainst\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Votes against Player\",\n  },\n  {\n    field: \"juryVotesReceived\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Jury Votes Received\",\n  },\n  {\n    field: \"idols\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Idols Found\",\n    render: (rowData, renderType) => rowData.idols.length,\n    // render: (value, renderType) =>\n    //   customRender(value, renderType, renderCellData, \"idols\"),\n    customFilterAndSearch: (term, rowData) => term <= rowData.idols.length,\n    customSort: (a, b) => a.idols.length - b.idols.length,\n  },\n];\n\nconst appearanceSpecficCells = [\n  {\n    field: \"place\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Place\",\n    customFilterAndSearch: (term, rowData) => term == rowData.place,\n  },\n  {\n    field: \"season\",\n    numeric: false,\n    disablePadding: true,\n    title: \"Season\",\n    defaultSort: \"desc\",\n  },\n  {\n    field: \"rank\",\n    numeric: true,\n    disablePadding: false,\n    title: \"'Perfect' Game Percentage\",\n    render: (rowData) =>\n      ((rowData.rank / 18) * 100).toFixed(1).toString() + \"%\",\n  },\n];\n\nconst careerSpecificCells = [\n  {\n    field: \"seasons\",\n    numeric: true,\n    disablePadding: false,\n    title: \"Times Played\",\n    render: (rowData) => rowData.seasons.length,\n    customFilterAndSearch: (term, rowData) => term <= rowData.seasons.length,\n    customSort: (a, b) => a.seasons.length - b.seasons.length,\n  },\n];\n\nconst insert = (arr, index, newItem) => [\n  ...arr.slice(0, index),\n  newItem,\n  ...arr.slice(index),\n];\n\nconst spliceCareerHeaders = () => {\n  let result = headCells;\n  for (let val in careerSpecificCells) {\n    result = insert(result, 5, careerSpecificCells[val]);\n  }\n  return result;\n};\n\nconst careerHeaders = spliceCareerHeaders();\nconst appearanceHeaders = headCells.concat(appearanceSpecficCells);\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiTableRow: {\n      \"&:hover\": {\n        backgroundColor: \"#dedede\",\n      },\n    },\n  },\n});\n\nconst ContestantsTable = (props) => {\n  const classes = useStyles();\n  const [state, setState] = useState(\"Individual Appearance\");\n  const [data, setData] = useState({\n    headers: headCells,\n    rows: props.appearances,\n  });\n\n  const handleChange = (event) => {\n    if (event.target.value != state) {\n      setState(event.target.value);\n    }\n  };\n\n  useEffect(() => {\n    if (state === \"Individual Appearance\") {\n      setData({\n        headers: appearanceHeaders,\n        rows: props.appearances,\n      });\n    } else if (state == \"Career\") {\n      setData({\n        headers: careerHeaders,\n        rows: props.careers,\n      });\n    }\n  }, [state]);\n\n  useEffect(() => {\n    async function getAppearances() {\n      const res = await fetch(\n        `${process.env.REACT_APP_USERS_SERVICE_URL}/appearances`\n      );\n      res\n        .json()\n        .then((res) => setData({ headers: appearanceHeaders, rows: res }))\n        .catch((err) => console.log(err));\n    }\n    getAppearances();\n  }, []);\n\n  return (\n    <div align=\"center\">\n      <h1\n        className=\"title is-1\"\n        style={{\n          fontFamily: \"Survivants\",\n          color: \"#74c7e3\",\n          textShadow: \"#000 0px 0px 10px\",\n        }}\n      >\n        Survivor Players\n      </h1>\n      <hr />\n      <br />\n      {/* <ThemeProvider theme={theme}> */}\n      <MaterialTable\n        style={{\n          zoom: \"67%\",\n        }}\n        icons={tableIcons}\n        showTitle={false}\n        title=\" \"\n        columns={data.headers}\n        data={data.rows}\n        options={{\n          // tableLayout: \"fixed\",\n          grouping: true,\n          filtering: true,\n          sorting: true,\n          doubleHorizontalScroll: true,\n          columnsButton: true,\n          pageSize: 25,\n          pageSizeOptions: [5, 10, 25, 50, 100],\n          toolbarButtonAlignment: \"right\",\n          thirdSortClick: false,\n          searchFieldStyle: {\n            width: \"100%\",\n          },\n          headerStyle: {\n            position: \"sticky\",\n            top: 0,\n            backgroundColor: \"#01579b\",\n            color: \"#FFF\",\n            fontFamily: \"Survivants\",\n          },\n          rowStyle: (rowData, index) => ({\n            backgroundColor: index % 2 === 0 ? \"#EEE\" : \"#FFF\",\n            fontFamily: \"Verdana\",\n          }),\n        }}\n        detailPanel={(rowData) => {\n          return <ContestantToggle appearance={rowData} />;\n        }}\n        onRowClick={(event, rowData, togglePanel) => togglePanel()}\n        components={{\n          Toolbar: (props) => (\n            <div align=\"right\">\n              <MTableToolbar {...props} />\n              <div style={{ padding: \"0px 10px\" }}>\n                <FormControl className={classes.formControl}>\n                  <InputLabel htmlFor=\"age-native-simple\">Type</InputLabel>\n                  <Select\n                    native\n                    value={state}\n                    onChange={handleChange}\n                    inputProps={{\n                      name: \"age\",\n                      id: \"age-native-simple\",\n                    }}\n                  >\n                    <option aria-label=\"None\" value=\"\" />\n                    <option value=\"Individual Appearance\">\n                      Individual Appearance\n                    </option>\n                    <option value=\"Career\">Career</option>\n                  </Select>\n                </FormControl>\n              </div>\n            </div>\n          ),\n        }}\n      />\n      {/* </ThemeProvider> */}\n    </div>\n  );\n};\n\n// new\nContestantsTable.propTypes = {\n  appearances: PropTypes.array.isRequired,\n  careers: PropTypes.array.isRequired,\n};\n\nexport default ContestantsTable;\n","import { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nimport \"./NavBar.css\"; // new\n\nconst titleStyle = {\n  fontWeight: \"bold\",\n};\n\nconst NavBar = (props) => {\n  let menu = (\n    <div className=\"navbar-menu\">\n      <div className=\"navbar-start\">\n        <Link to=\"/seasons\" className=\"navbar-item\" data-testid=\"nav-about\">\n          Seasons\n        </Link>\n        <Link to=\"/players\" className=\"navbar-item\" data-testid=\"nav-about\">\n          Players\n        </Link>\n        <Link\n          to=\"/contestant/1?against=2\"\n          className=\"navbar-item\"\n          data-testid=\"nav-about\"\n        >\n          Versus\n        </Link>\n        <Link to=\"/graph\" className=\"navbar-item\" data-testid=\"nav-about\">\n          Graph\n        </Link>\n      </div>\n    </div>\n  );\n\n  return (\n    <nav\n      className=\"navbar is-dark\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <section className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link to=\"/\" className=\"navbar-item nav-title\" style={titleStyle}>\n            {props.title}\n          </Link>\n          <span\n            className=\"nav-toggle navbar-burger\"\n            onClick={() => {\n              let toggle = document.querySelector(\".nav-toggle\");\n              let menu = document.querySelector(\".navbar-menu\");\n              toggle.classList.toggle(\"is-active\");\n              menu.classList.toggle(\"is-active\");\n            }}\n          >\n            <span />\n            <span />\n            <span />\n          </span>\n        </div>\n        {menu}\n      </section>\n    </nav>\n  );\n};\n\nNavBar.propTypes = {\n  title: PropTypes.string.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.func.isRequired,\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport \"./form.css\";\n\nconst LoginForm = props => {\n  if (props.isAuthenticated()) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div>\n      <h1 className=\"title is-1\">Log In</h1>\n      <hr />\n      <br />\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\"\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          props.handleLoginFormSubmit(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string()\n            .email(\"Enter a valid email.\")\n            .required(\"Email is required.\"),\n          password: Yup.string().required(\"Password is required.\")\n        })}\n      >\n        {props => {\n          const {\n            values,\n            touched,\n            errors,\n            isSubmitting,\n            handleChange,\n            handleBlur,\n            handleSubmit\n          } = props;\n          return (\n            <form onSubmit={handleSubmit}>\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"input-email\">\n                  Email\n                </label>\n                <input\n                  name=\"email\"\n                  id=\"input-email\"\n                  className={\n                    errors.email && touched.email ? \"input error\" : \"input\"\n                  }\n                  type=\"email\"\n                  placeholder=\"Enter an email address\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </div>\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"input-password\">\n                  Password\n                </label>\n                <input\n                  name=\"password\"\n                  id=\"input-password\"\n                  className={\n                    errors.password && touched.password\n                      ? \"input error\"\n                      : \"input\"\n                  }\n                  type=\"password\"\n                  placeholder=\"Enter a password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </div>\n              <input\n                type=\"submit\"\n                className=\"button is-primary\"\n                value=\"Submit\"\n                disabled={isSubmitting}\n              />\n            </form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  handleLoginFormSubmit: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.func.isRequired\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport \"./form.css\";\n\nconst RegisterForm = props => {\n  if (props.isAuthenticated()) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div>\n      <h1 className=\"title is-1\">Register</h1>\n      <hr />\n      <br />\n      <Formik\n        initialValues={{\n          username: \"\",\n          email: \"\",\n          password: \"\"\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          props.handleRegisterFormSubmit(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n        validationSchema={Yup.object().shape({\n          username: Yup.string()\n            .required(\"Username is required.\")\n            .min(6, \"Username must be greater than 5 characters.\"),\n          email: Yup.string()\n            .email(\"Enter a valid email.\")\n            .required(\"Email is required.\")\n            .min(6, \"Email must be greater than 5 characters.\"),\n          password: Yup.string()\n            .required(\"Password is required.\")\n            .min(11, \"Password must be greater than 10 characters.\")\n        })}\n      >\n        {props => {\n          const {\n            values,\n            touched,\n            errors,\n            isSubmitting,\n            handleChange,\n            handleBlur,\n            handleSubmit\n          } = props;\n          return (\n            <form onSubmit={handleSubmit}>\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"input-username\">\n                  Username\n                </label>\n                <input\n                  name=\"username\"\n                  id=\"input-username\"\n                  className={\n                    errors.username && touched.username\n                      ? \"input error\"\n                      : \"input\"\n                  }\n                  type=\"text\"\n                  placeholder=\"Enter a username\"\n                  value={values.username}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {errors.username && touched.username && (\n                  <div className=\"input-feedback\">{errors.username}</div>\n                )}\n              </div>\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"input-email\">\n                  Email\n                </label>\n                <input\n                  name=\"email\"\n                  id=\"input-email\"\n                  className={\n                    errors.email && touched.email ? \"input error\" : \"input\"\n                  }\n                  type=\"email\"\n                  placeholder=\"Enter an email address\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </div>\n              <div className=\"field\">\n                <label className=\"label\" htmlFor=\"input-password\">\n                  Password\n                </label>\n                <input\n                  name=\"password\"\n                  id=\"input-password\"\n                  className={\n                    errors.password && touched.password\n                      ? \"input error\"\n                      : \"input\"\n                  }\n                  type=\"password\"\n                  placeholder=\"Enter a password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </div>\n              <input\n                type=\"submit\"\n                className=\"button is-primary\"\n                value=\"Submit\"\n                disabled={isSubmitting}\n              />\n            </form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nRegisterForm.propTypes = {\n  handleRegisterFormSubmit: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.func.isRequired\n};\nexport default RegisterForm;\n","import PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Component } from \"react\";\nimport React from \"react\";\n\nclass UserStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      username: \"\",\n      isAuthenticated: () => {}\n    };\n  }\n  componentDidMount() {\n    this.getUserStatus();\n  }\n\n  getUserStatus(event) {\n    const options = {\n      url: `${process.env.REACT_APP_USERS_SERVICE_URL}/auth/status`,\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${this.props.accessToken}`\n      }\n    };\n    return axios(options)\n      .then(res => {\n        // new\n        this.setState({\n          email: res.data.email,\n          username: res.data.username\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    // new\n    if (!this.props.isAuthenticated()) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <div>\n        <ul>\n          <li>\n            <strong>Email:</strong>&nbsp;\n            <span data-testid=\"user-email\">{this.state.email}</span>\n          </li>\n          <li>\n            <strong>Username:</strong>&nbsp;\n            <span data-testid=\"user-username\">{this.state.username}</span>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nUserStatus.propTypes = {\n  accessToken: PropTypes.string,\n  isAuthenticated: PropTypes.func.isRequired\n};\n\nexport default UserStatus;\n","import React, { Component, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Paper, Button, Card } from \"@material-ui/core\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Image from \"react-bootstrap/Image\";\nimport ExtraContestantStatistic from \"./ContestantKeyValue\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport { blue } from \"@material-ui/core/colors\";\nimport * as QueryString from \"query-string\";\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    display: \"inline-block\",\n    zoom: \"67%\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n    margin: \"auto\",\n    maxWidth: \"100%\",\n    width: 256,\n  },\n  image: {\n    width: 256,\n    height: 256,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    maxWidth: \"50%\",\n    maxHeight: \"50%\",\n    border: \"3px solid\",\n    borderRadius: \"50%\",\n    borderColor: \"#74c7e3\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n});\n\nfunction calculateAge(birthday) {\n  // birthday is a date\n  var ageDifMs = Date.now() - Date.parse(birthday);\n  var ageDate = new Date(ageDifMs); // miliseconds from epoch\n  return Math.abs(ageDate.getUTCFullYear() - 1970);\n}\n\nconst nonCompareCells = [\n  {\n    field: \"birthdate\",\n    title: \"Age\",\n    render: (val) => calculateAge(val),\n  },\n  {\n    field: \"hometown\",\n    title: \"Hometown\",\n    render: (val) => val,\n  },\n  {\n    field: \"occupations\",\n    title: \"Occupation\",\n    render: (val) => val,\n  },\n];\n\nconst headCells = [\n  {\n    field: \"challengeWins\",\n    title: \"Challenge Wins\",\n  },\n  {\n    field: \"individualImmunityChallengeWins\",\n    title: \"Individual Immunity Challenge Wins\",\n  },\n  {\n    field: \"sitOuts\",\n    title: \"Challenge Sit Outs\",\n  },\n  {\n    field: \"tribalCouncilAppearances\",\n    title: \"Tribal Council Appearances\",\n  },\n  {\n    field: \"votesForBootee\",\n    title: \"Votes for Bootee\",\n  },\n  {\n    field: \"wrongSideOfTheVote\",\n    title: \"Wrong Side of the Vote\",\n  },\n  {\n    field: \"votesAgainst\",\n    title: \"Votes against Player\",\n  },\n  {\n    field: \"juryVotesReceived\",\n    title: \"Jury Votes Received\",\n  },\n  { field: \"idols\", title: \"Idols Found\" },\n  // { field: \"place\", title: \"Place\" },\n];\n\nconst PlayerCard = (props) => {\n  const [seasonPicker, setSeasonPicker] = useState(0);\n\n  useEffect(() => {}, [seasonPicker]);\n\n  return (\n    <Grid item xs={4} justify=\"center\">\n      <FormControl\n        className={styles.formControl}\n        style={{\n          backgroundColor: \"#FFFF\",\n          borderColor: \"#00000\",\n          border: \"1px solid\",\n        }}\n      >\n        <InputLabel shrink htmlFor=\"name-native\">\n          Name\n        </InputLabel>\n        <NativeSelect\n          value={props.picker}\n          onChange={props.onHandleChange}\n          inputProps={{\n            name: \"name\",\n            id: \"name-native\",\n          }}\n          style={{ fontFamily: \"Survivants\", fontSize: 15 }}\n        >\n          <option value=\"\">None</option>\n          {Object.keys(props.playerNames).map((key, index) => (\n            <option key={index} value={props.playerNames[key]}>\n              {key}\n            </option>\n          ))}\n        </NativeSelect>\n        <FormHelperText>Compare Against</FormHelperText>\n      </FormControl>\n      <Grid item xs={12} justify=\"center\">\n        <br></br>\n      </Grid>\n      {props.contestant && (\n        <Paper className={styles.paper} align=\"center\" elevation={10}>\n          <div style={{ padding: 20 }}>\n            <Grid container justify=\"center\">\n              <Grid item xs={12} p>\n                <div style={{ width: 256 }}>\n                  <img\n                    border=\"5px solid\"\n                    box-shadow=\"50px 50px 113px\"\n                    style={{\n                      objectFit: \"cover\",\n                      width: \"100%\",\n                      height: \"350px\",\n                      borderColor: \"#74c7e3\",\n                      borderRadius: \"50%\",\n                    }}\n                    src={props.contestant.career.profile_image_link}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography style={{ fontFamily: \"Survivants\", fontSize: 30 }}>\n                  {props.contestant.contestant}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl className={styles.formControl}>\n                  <InputLabel shrink htmlFor=\"name-native\">\n                    Season\n                  </InputLabel>\n                  <NativeSelect\n                    onChange={props.onHandleSeasonChange}\n                    style={{ fontFamily: \"Survivants\", fontSize: 15 }}\n                  >\n                    <option value={0}>Career</option>\n                    {props.contestant.career.seasons.map(\n                      (season_order, index) => (\n                        <option key={index} value={season_order}>\n                          {season_order}\n                        </option>\n                      )\n                    )}\n                  </NativeSelect>\n                </FormControl>\n              </Grid>\n              <Grid item xs={10}>\n                <div align=\"center\">\n                  {nonCompareCells.map((statistic) => (\n                    // eslint-disable-next-line react/jsx-key\n                    <Card className={styles.paper} style={{ margin: \"20px\" }}>\n                      <ExtraContestantStatistic\n                        size={12}\n                        stat={statistic.title}\n                        value={statistic.render(\n                          props.contestant.career[statistic.field]\n                        )}\n                      />\n                    </Card>\n                  ))}\n                </div>\n                <div align=\"center\">\n                  {headCells.map((statistic) => (\n                    // eslint-disable-next-line react/jsx-key\n                    <Card\n                      className={styles.paper}\n                      style={\n                        props.against\n                          ? props.contestant.appearance[statistic.field] >\n                            props.against.appearance[statistic.field]\n                            ? {\n                                margin: \"20px\",\n                                background: \"#61e885\",\n                              }\n                            : props.contestant.appearance[statistic.field] ==\n                              props.against.appearance[statistic.field]\n                            ? {\n                                margin: \"20px\",\n                                background: \"#faff70\",\n                              }\n                            : { margin: \"20px\", background: \"#fc806a\" }\n                          : { margin: \"20px\" }\n                      }\n                    >\n                      <ExtraContestantStatistic\n                        size={12}\n                        stat={statistic.title}\n                        value={props.contestant.appearance[statistic.field]}\n                      />\n                    </Card>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </Paper>\n      )}\n    </Grid>\n  );\n};\n\nclass ContestantsProfile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      contestant: null,\n      against: null,\n      picker: \"Tyson Apostol\",\n      againstPicker: \"Tyson Apostol\",\n      playerNames: {},\n    };\n\n    this.handleChangeContestant = this.handleChangeContestant.bind(this);\n    this.handleChangeAgainst = this.handleChangeAgainst.bind(this);\n    this.handleChangeContestantSeason = this.handleChangeContestantSeason.bind(\n      this\n    );\n    this.handleChangeAgainstSeason = this.handleChangeAgainstSeason.bind(this);\n  }\n\n  getCareer(who, id) {\n    axios\n      .get(\n        `${process.env.REACT_APP_USERS_SERVICE_URL}/contestants/${id}/career`\n      )\n      .then((res) => {\n        //TODO hack fix this later\n        res.data.idols = res.data.idols.length;\n\n        this.setState((s) => ({\n          ...s,\n          [who]: {\n            career: res.data,\n            appearance: res.data,\n          },\n        }));\n        console.log(this.state);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  getAppearance(who, id, season) {\n    axios\n      .get(\n        `${process.env.REACT_APP_USERS_SERVICE_URL}/appearances?contestant_id=${id}&season=${season}`\n      )\n      .then((res) => {\n        //TODO hack fix this later\n        res.data[0].idols = res.data[0].idols.length;\n        console.log(res.data[0]);\n        this.setState((s) => ({\n          ...s,\n          [who]: { ...s[who], appearance: res.data[0] },\n        }));\n        console.log(this.state);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  getPlayerNames() {\n    axios\n      .get(`${process.env.REACT_APP_USERS_SERVICE_URL}/contestants/names`)\n      .then((res) => {\n        this.setState((s) => ({ ...s, playerNames: res.data }));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleChangeContestant(event) {\n    this.setState({\n      ...this.state,\n      picker: event.target.value,\n    });\n    this.getCareer(\"contestant\", event.target.value);\n  }\n\n  handleChangeAgainst(event) {\n    this.setState({\n      ...this.state,\n      againstPicker: event.target.value,\n    });\n    this.getCareer(\"against\", event.target.value);\n  }\n\n  handleChangeSeason(who, event) {\n    if (event.target.value != 0) {\n      this.getAppearance(\n        who,\n        this.state.contestant.career.contestant_id,\n        event.target.value\n      );\n    } else {\n      this.getCareer(\n        who,\n        this.state[who].career.contestant_id,\n        event.target.value\n      );\n    }\n  }\n\n  handleChangeAgainstSeason(event) {\n    this.handleChangeSeason(\"against\", event);\n  }\n\n  handleChangeContestantSeason(event) {\n    this.handleChangeSeason(\"contestant\", event);\n  }\n\n  componentDidMount() {\n    this.getCareer(\"contestant\", this.props.match.params.id);\n    const params = QueryString.parse(this.props.location.search);\n    if (params.against) {\n      this.getCareer(\"against\", params.against);\n    }\n    this.getPlayerNames();\n  }\n\n  render() {\n    return (\n      <div className={styles.root} align=\"center\">\n        <h1\n          className=\"title is-1\"\n          style={{\n            fontFamily: \"Survivants\",\n            color: \"#74c7e3\",\n            textShadow: \"#000 0px 0px 10px\",\n          }}\n        >\n          Contestant Matchup\n        </h1>\n        <hr />\n        <br />\n        <Grid container>\n          <Grid item xs={1} />\n          <PlayerCard\n            playerNames={this.state.playerNames}\n            contestant={this.state.contestant}\n            against={this.state.against}\n            onHandleChange={this.handleChangeContestant}\n            onHandleSeasonChange={this.handleChangeContestantSeason}\n            picker={this.state.picker}\n          />\n          <Grid item xs={2} />\n          <PlayerCard\n            playerNames={this.state.playerNames}\n            contestant={this.state.against}\n            against={this.state.contestant}\n            onHandleChange={this.handleChangeAgainst}\n            onHandleSeasonChange={this.handleChangeAgainstSeason}\n            picker={this.state.againstPicker}\n          />\n          <Grid item xs={1} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ContestantsProfile;\n","import Graph from \"react-graph-vis\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst ContestantGraph = (props) => {\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  const [graph, setGraph] = useState({\n    nodes: [],\n    edges: [],\n  });\n\n  const options = {\n    layout: {\n      hierarchical: {\n        enabled: false,\n        nodeSpacing: 425,\n        blockShifting: false,\n        edgeMinimization: false,\n        sortMethod: \"directed\",\n      },\n    },\n    physics: {\n      enabled: true,\n    },\n    nodes: {\n      shape: \"dot\",\n      size: 50,\n      font: {\n        size: 32,\n      },\n      borderWidth: 2,\n    },\n    interaction: { multiselect: true, navigationButtons: true },\n    edges: {\n      width: 2,\n    },\n    autoResize: true,\n    height: \"100%\",\n    width: \"100%\",\n  };\n\n  const events = {\n    doubleClick: function(event) {\n      var { nodes, edges } = event;\n      console.log(nodes);\n      if (nodes.length === 1) {\n        var node = nodes[0];\n        window.location.href = `/contestant/${node}`;\n      }\n    },\n  };\n\n  const getAppearanceGraph = () => {\n    axios\n      .get(`${process.env.REACT_APP_USERS_SERVICE_URL}/appearances/graph`)\n      .then((res) => {\n        setGraph(res.data);\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    getAppearanceGraph();\n  }, []);\n\n  return (\n    <Graph\n      graph={graph}\n      options={options}\n      events={events}\n      getNetwork={(network) => {\n        //  if you want access to vis.js network api you can set the state in a parent component using this property\n        network.on(\"stabilizationIterationsDone\", function() {\n          network.setOptions({\n            physics: false,\n          });\n        });\n      }}\n      style={{ height: \"2000px\", width: \"100%\" }}\n    />\n  );\n};\n\nexport default ContestantGraph;\n","import React, { Component, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst SeasonsTable = (props) => {\n  return (\n    <div>\n      <Typography>Coming Soon...</Typography>\n    </div>\n  );\n};\n\nexport default SeasonsTable;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport ContestantsTable from \"./components/ContestantsTable\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport UsersList from \"./components/UsersList\";\nimport AddUser from \"./components/AddUser\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport UserStatus from \"./components/UserStatus\";\nimport \"./App.css\";\nimport ContestantsProfile from \"./components/ContestantProfile\";\nimport ContestantGraph from \"./components/ContestantGraph\";\nimport SeasonsTable from \"./components/SeasonsTable\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      users: [],\n      appearances: [],\n      careers: [],\n      username: \"\",\n      email: \"\",\n      title: \"SurvivorDB\",\n    };\n\n    this.addUser = this.addUser.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRegisterFormSubmit = this.handleRegisterFormSubmit.bind(this);\n    this.handleLoginFormSubmit = this.handleLoginFormSubmit.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.logoutUser = this.logoutUser.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUsers();\n    this.getAppearances();\n    this.getCareers();\n  }\n\n  getUsers() {\n    axios\n      .get(`${process.env.REACT_APP_USERS_SERVICE_URL}/users`)\n      .then((res) => {\n        this.setState((s) => ({ ...this.state, users: res.data }));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  getAppearances() {\n    axios\n      .get(`${process.env.REACT_APP_USERS_SERVICE_URL}/appearances`)\n      .then((res) => {\n        this.setState((s) => ({ ...this.state, appearances: res.data }));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  getCareers() {\n    axios\n      .get(`${process.env.REACT_APP_USERS_SERVICE_URL}/contestants/careers`)\n      .then((res) => {\n        this.setState((s) => ({ ...this.state, careers: res.data }));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleRegisterFormSubmit(data) {\n    const url = `${process.env.REACT_APP_USERS_SERVICE_URL}/auth/register`;\n    axios\n      .post(url, data)\n      .then((res) => {\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleLoginFormSubmit(data) {\n    const url = `${process.env.REACT_APP_USERS_SERVICE_URL}/auth/login`;\n    axios\n      .post(url, data)\n      .then((res) => {\n        this.setState({ accessToken: res.data.access_token });\n        this.getUsers();\n        window.localStorage.setItem(\"refreshToken\", res.data.refresh_token); // new\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  isAuthenticated() {\n    if (this.state.accessToken || this.validRefresh()) {\n      return true;\n    }\n    return false;\n  }\n\n  validRefresh() {\n    const token = window.localStorage.getItem(\"refreshToken\");\n    if (token) {\n      axios\n        .post(`${process.env.REACT_APP_USERS_SERVICE_URL}/auth/refresh`, {\n          refresh_token: token,\n        })\n        .then((res) => {\n          this.setState({ accessToken: res.data.access_token });\n          this.getUsers();\n          window.localStorage.setItem(\"refreshToken\", res.data.refresh_token);\n          return true;\n        })\n        .catch((err) => {\n          return false;\n        });\n    }\n    return false;\n  }\n\n  logoutUser() {\n    window.localStorage.removeItem(\"refreshToken\");\n    this.setState({ accessToken: null });\n  }\n\n  addUser(event) {\n    event.preventDefault();\n\n    const data = {\n      username: this.state.username,\n      email: this.state.email,\n    };\n\n    axios\n      .post(`${process.env.REACT_APP_USERS_SERVICE_URL}/users`, data)\n      .then((res) => {\n        this.getUsers();\n        this.setState({ username: \"\", email: \"\" });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleChange(event) {\n    const obj = {};\n    obj[event.target.name] = event.target.value;\n    this.setState(obj);\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar\n          title={this.state.title}\n          logoutUser={this.logoutUser}\n          isAuthenticated={this.isAuthenticated} // new\n        />\n        <section\n          className=\"section\"\n          style={{\n            backgroundImage:\n              'url(\"https://www.venturefiji.com/wp-content/uploads/2015/12/laucala-island-resort-Laucala-Island-Aerial-South-Coast-2.jpg\")',\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"cover\",\n            width: \"100%\",\n            height: 1000,\n          }}\n        >\n          <div>\n            <div>\n              <div>\n                <br />\n                <Switch>\n                  <Route\n                    exact\n                    path=\"/\"\n                    render={() => (\n                      <div align=\"center\">\n                        <h1\n                          className=\"title is-1\"\n                          style={{\n                            fontFamily: \"Survivants\",\n                            color: \"#74c7e3\",\n                            fontSize: \"200px\",\n                            textShadow: \"#000 0px 0px 10px\",\n                          }}\n                        >\n                          Survivor.DB\n                        </h1>\n                        <h2 className=\"title is-3\">Under construction</h2>\n                        <hr />\n                        <br />\n                        <p>\n                          A database for all things survivor. Spoilers ahead.\n                        </p>\n                      </div>\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/players\"\n                    render={() => (\n                      <ContestantsTable\n                        appearances={this.state.appearances}\n                        careers={this.state.careers}\n                      />\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/graph\"\n                    render={() => (\n                      <ContestantGraph\n                        appearances={this.state.appearances.slice(0, 10)}\n                      />\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/register\"\n                    render={() => (\n                      <RegisterForm\n                        handleRegisterFormSubmit={this.handleRegisterFormSubmit}\n                        isAuthenticated={this.isAuthenticated}\n                      />\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/login\"\n                    render={() => (\n                      <LoginForm\n                        handleLoginFormSubmit={this.handleLoginFormSubmit}\n                        isAuthenticated={this.isAuthenticated}\n                      />\n                    )}\n                  />\n                  <Route\n                    exact\n                    path=\"/status\"\n                    render={() => (\n                      <UserStatus\n                        accessToken={this.state.accessToken}\n                        isAuthenticated={this.isAuthenticated}\n                      />\n                    )}\n                  />\n                  <Route\n                    path=\"/contestant/:id\"\n                    component={ContestantsProfile}\n                  />\n                  <Route path=\"/seasons\" component={SeasonsTable} />\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\"; // new\nimport \"./index.css\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  // new\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}